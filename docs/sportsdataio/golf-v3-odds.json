{
  "swagger": "2.0",
  "info": {
    "title": "Golf v3 Odds",
    "version": "1.0"
  },
  "host": "api.sportsdata.io",
  "basePath": "/v3/golf/odds",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/{format}/TournamentOdds/{tournamentid}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, without line movement.",
        "operationId": "TournamentOdds",
        "summary": "Tournament Odds",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/TournamentOddsLineMovement/{tournamentid}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, with line movement. As this is for historical line movement, the cache time is set slower than the normal Tournament Odds endpoint.",
        "operationId": "TournamentOddsLineMovement",
        "summary": "Tournament Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InPlayTournamentOdds/{tournamentid}": {
      "get": {
        "description": "In-tournament odds, updating constantly throughout the tournament, without line movement.",
        "operationId": "InPlayTournamentOdds",
        "summary": "In-Play Tournament Odds",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InPlayTournamentOddsLineMovement/{tournamentid}": {
      "get": {
        "description": "In-tournament odds, updating constantly throughout the tournament, with line movement. As this is for historical line movement, the cache time is set slower than the normal In-Play Tournament Odds endpoint.",
        "operationId": "InPlayTournamentOddsLineMovement",
        "summary": "In-Play Tournament Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/ActiveSportsbooks": {
      "get": {
        "description": "A list of all available sportsbooks with their associated unique IDs.",
        "operationId": "SportsbooksByActive",
        "summary": "Sportsbooks - by Active",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sportsbook"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEventsByDate/{date}": {
      "get": {
        "description": "The list of current BettingEvents for the given date, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsByDate",
        "summary": "Betting Events - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the tournament(s).  Can be any of the dates for the span of a tournament (i.e. Thursday through Sunday). <br>Examples: <code>2020-10-17</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEvents/{season}": {
      "get": {
        "description": "The list of current BettingEvents for the given season, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsBySeason",
        "summary": "Betting Events - by Season",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season<br>Examples: <code>2020</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarkets/{eventId}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given BettingEventID.",
        "operationId": "BettingMarketsByEvent",
        "summary": "Betting Markets - by Event",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByTournamentID/{tournamentid}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props) and available outcomes for a given TournamentID.",
        "operationId": "BettingMarketsByTournament",
        "summary": "Betting Markets - by Tournament",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of the desired tournament for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{eventId}/{marketTypeID}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint.",
        "operationId": "BettingMarketsByMarketType",
        "summary": "Betting Markets - by Market Type",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMetadata": {
      "get": {
        "description": "Returns the list of MarketTypes, BetTypes, PeriodTypes, OutcomeTypes, and ResultTypes to map the IDs to descriptive names. Also includes a list of the MarketType, BetType & PeriodType combinations which we will have resulting for.",
        "operationId": "BettingMetadata",
        "summary": "Betting Metadata",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingEntityMetadataCollection"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/TournamentOdds/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, with line movement. As this is for historical line movement, the cache time is set slower than the normal Tournament Odds endpoint. Called by Sportsbook Group.",
        "operationId": "TournamentOdds[SportsbookGroup]",
        "summary": "Tournament Odds [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/TournamentOddsLineMovement/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, with line movement. As this is for historical line movement, the cache time is set slower than the normal Tournament Odds endpoint. Called by Sportsbook Group.",
        "operationId": "TournamentOddsLineMovement[SportsbookGroup]",
        "summary": "Tournament Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingPlayerPropsByTournamentID/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "This works in the same way as Betting Markets by Market Type but is prefiltered to the Player Props type only. Ideal if your application will only ever require Player Props, but if you also want other types of props it is recommended to use the by Market Type endpoint.",
        "operationId": "BettingPlayerPropsByTournament[SportsbookGroup]",
        "summary": "Betting Player Props - by Tournament [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of the desired tournament for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br>\n\n<b>Important Note:</b> the default parameter of available is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>\n\nPossible values include: <br><br>\n<code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br>\n<code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByMarketType[SportsbookGroup]",
        "summary": "Betting Markets - by Market Type [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByTournamentID/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props) and available outcomes for a given TournamentID. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByTournament[SportsbookGroup]",
        "summary": "Betting Markets - by Tournament [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of the desired tournament for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByEvent/{eventId}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the markets and available outcomes for a given BettingEventID. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByEvent[SportsbookGroup]",
        "summary": "Betting Markets - by Event [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{marketId}/{sportsbookgroup}": {
      "get": {
        "description": "Returns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarket[SportsbookGroup]",
        "summary": "Betting Market [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InPlayTournamentOdds/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, with line movement. As this is for historical line movement, the cache time is set slower than the normal Tournament Odds endpoint. Called by Sportsbook Group.",
        "operationId": "InPlayTournamentOdds[SportsbookGroup]",
        "summary": "In-Play Tournament Odds [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InPlayTournamentOddsLineMovement/{tournamentid}/{sportsbookgroup}": {
      "get": {
        "description": "Pre-tournament odds, updating constantly until the tournament begins, with line movement. As this is for historical line movement, the cache time is set slower than the normal Tournament Odds endpoint. Called by Sportsbook Group.",
        "operationId": "InPlayTournamentOddsLineMovement[SportsbookGroup]",
        "summary": "In-Play Tournament Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "tournamentid",
            "in": "path",
            "description": "The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TournamentOdds"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{marketId}": {
      "get": {
        "description": "Betting MarketReturns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines.",
        "operationId": "BettingMarket",
        "summary": "Betting Market",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.\n",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "TournamentOdds": {
      "properties": {
        "Tournament": {
          "$ref": "#/definitions/Tournament"
        },
        "PlayerTournamentOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerTournamentOdd"
          }
        }
      }
    },
    "Tournament": {
      "properties": {
        "TournamentID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "StartDate": {
          "type": "string",
          "x-nullable": true
        },
        "EndDate": {
          "type": "string",
          "x-nullable": true
        },
        "IsOver": {
          "type": "boolean",
          "x-nullable": false
        },
        "IsInProgress": {
          "type": "boolean",
          "x-nullable": false
        },
        "Venue": {
          "type": "string",
          "x-nullable": true
        },
        "Location": {
          "type": "string",
          "x-nullable": true
        },
        "Par": {
          "type": "integer",
          "x-nullable": true
        },
        "Yards": {
          "type": "integer",
          "x-nullable": true
        },
        "Purse": {
          "type": "number",
          "x-nullable": true
        },
        "StartDateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Canceled": {
          "type": "boolean",
          "x-nullable": true
        },
        "Covered": {
          "type": "boolean",
          "x-nullable": true
        },
        "City": {
          "type": "string",
          "x-nullable": true
        },
        "State": {
          "type": "string",
          "x-nullable": true
        },
        "ZipCode": {
          "type": "string",
          "x-nullable": true
        },
        "Country": {
          "type": "string",
          "x-nullable": true
        },
        "TimeZone": {
          "type": "string",
          "x-nullable": true
        },
        "Format": {
          "type": "string",
          "x-nullable": true
        },
        "Rounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Round"
          }
        },
        "SportRadarTournamentID": {
          "type": "string",
          "x-nullable": true
        },
        "OddsCoverage": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Round": {
      "properties": {
        "TournamentID": {
          "type": "integer",
          "x-nullable": false
        },
        "RoundID": {
          "type": "integer",
          "x-nullable": false
        },
        "Number": {
          "type": "integer",
          "x-nullable": true
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "IsRoundOver": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "PlayerTournamentOdd": {
      "properties": {
        "PlayerTournamentOddId": {
          "type": "integer",
          "x-nullable": false
        },
        "SportsbookId": {
          "type": "integer",
          "x-nullable": false
        },
        "SportbookName": {
          "type": "string",
          "x-nullable": true
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerId": {
          "type": "integer",
          "x-nullable": false
        },
        "OddsToWin": {
          "type": "integer",
          "x-nullable": false
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": false
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Sportsbook": {
      "properties": {
        "SportsbookID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingEvent": {
      "properties": {
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Season": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingEventTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventType": {
          "type": "string",
          "x-nullable": true
        },
        "StartDate": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "TournamentId": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarkets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingMarket"
          }
        }
      }
    },
    "BettingMarket": {
      "properties": {
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingBetTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingBetType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingPeriodTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingPeriodType": {
          "type": "string",
          "x-nullable": true
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerName": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "AvailableSportsbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sportsbook"
          }
        },
        "AnyBetsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "BettingOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingOutcome"
          }
        },
        "ConsensusOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsensusOutcome"
          }
        }
      }
    },
    "BettingOutcome": {
      "properties": {
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "GroupKey": {
          "type": "integer",
          "x-nullable": true
        },
        "IsInPlayTournamentOdd": {
          "type": "boolean",
          "x-nullable": true
        },
        "SportsbookMarketID": {
          "type": "string",
          "x-nullable": true
        },
        "SportsbookOutcomeID": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ConsensusOutcome": {
      "properties": {
        "NumberOfSportsbooks": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "GroupKey": {
          "type": "integer",
          "x-nullable": true
        },
        "IsInPlayTournamentOdd": {
          "type": "boolean",
          "x-nullable": true
        },
        "SportsbookMarketID": {
          "type": "string",
          "x-nullable": true
        },
        "SportsbookOutcomeID": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingEntityMetadataCollection": {
      "properties": {
        "BettingBetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingMarketTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingPeriodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingEventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingOutcomeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        }
      }
    },
    "BettingEntityMetadata": {
      "properties": {
        "RecordId": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Active": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    }
  },
  "tags": []
}