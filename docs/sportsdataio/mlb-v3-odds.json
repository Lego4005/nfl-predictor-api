{
  "swagger": "2.0",
  "info": {
    "title": "MLB v3 Odds",
    "version": "1.0"
  },
  "host": "api.sportsdata.io",
  "basePath": "/v3/mlb/odds",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/{format}/GameOddsByDate/{date}": {
      "get": {
        "description": "Returns full game odds (spread, moneyline, total) for games on a given date. Only returns the most recently seen odds, not inclusive of line movement.",
        "operationId": "PreGameOddsByDate",
        "summary": "Pre-Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/GameOddsLineMovement/{gameid}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games in a given week and season. Non-full-game means 1st-half or 1st-quarter, for example, rather than full game. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "PreGameOddsLineMovement",
        "summary": "Pre-Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/LiveGameOddsByDate/{date}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games on a given date. Only returns the most recently seen odds, not inclusive of line movement. As this is in-game, it will only return results while the game is in progress.",
        "operationId": "InGameOddsByDate",
        "summary": "In-Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/LiveGameOddsLineMovement/{gameid}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games on a given date. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "InGameOddsLineMovement",
        "summary": "In-Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PlayerPropsByDate/{date}": {
      "get": {
        "description": "Generated Player Props by Date",
        "operationId": "GeneratedPlayerPropsByDate",
        "summary": "Generated Player Props by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerProp"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PlayerPropsByTeam/{date}/{team}": {
      "get": {
        "description": "Generated Player Props by Team",
        "operationId": "GeneratedPlayerPropsByTeam",
        "summary": "Generated Player Props by Team",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "in": "path",
            "description": "The abbreviation of the requested team. <br> Examples: <code>PHI</code>, <code>MIN</code>, <code>DET</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerProp"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PlayerPropsByPlayerID/{date}/{playerid}": {
      "get": {
        "description": "Generated Player Props by Player",
        "operationId": "GeneratedPlayerPropsByPlayer",
        "summary": "Generated Player Props by Player",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerid",
            "in": "path",
            "description": "Unique FantasyData Player ID. Example:<code>10000507</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerProp"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/AlternateMarketGameOddsByDate/{date}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games on a given date. Non-full-game means first five innings, for example, rather than full game. Only returns the most recently seen odds, not inclusive of line movement.",
        "operationId": "PeriodGameOddsByDate",
        "summary": "Period Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/AlternateMarketGameOddsLineMovement/{gameid}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games on a given date. Non-full-game means first five innings, for example, rather than full game. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "PeriodGameOddsLineMovement",
        "summary": "Period Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/TeamTrends/{team}": {
      "get": {
        "description": "Describes recent team trends and performance against betting data in recent sets of games.",
        "operationId": "BettingTrendsByTeam",
        "summary": "Betting Trends - by Team",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "team",
            "in": "path",
            "description": "The abbreviation of the requested team. <br> Examples: <code>PHI</code>, <code>MIN</code>, <code>DET</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/TeamTrends"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/MatchupTrends/{team}/{opponent}": {
      "get": {
        "description": "Returns trends data for a given pairing of teams. Will return data even if the teams are not set to play this season. Intended for use on a specific game, though it will work for other comparisons if applicable.",
        "operationId": "BettingTrendsByMatchup",
        "summary": "Betting Trends - by Matchup",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "team",
            "in": "path",
            "description": "The abbreviation of the requested team. <br> Examples: <code>PHI</code>, <code>MIN</code>, <code>DET</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "opponent",
            "in": "path",
            "description": "The abbreviation of the requested opponent. <br> Examples: <code>PHI</code>, <code>MIN</code>, <code>DET</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/MatchupTrends"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEventsByDate/{date}": {
      "get": {
        "description": "The list of current BettingEvents for the given date, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsByDate",
        "summary": "Betting Events - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2020-08-20</code>, <code>2020-08-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEvents/{season}": {
      "get": {
        "description": "The list of current BettingEvents for the given season, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsBySeason",
        "summary": "Betting Events - by Season",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season (with optional season type).<br>Examples: <code>2020</code>, <code>2020PRE</code>, <code>2020POST</code>, <code>2020STAR</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingFuturesBySeason/{season}": {
      "get": {
        "description": "Returns available Futures markets for the given season. Does not include line movement.",
        "operationId": "BettingFuturesBySeason",
        "summary": "Betting Futures - by Season",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season (with optional season type).<br>Examples: <code>2020</code>, <code>2020PRE</code>, <code>2020POST</code>, <code>2020STAR</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarkets/{eventId}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given BettingEventID.",
        "operationId": "BettingMarketsByEvent",
        "summary": "Betting Markets - by Event",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{marketId}": {
      "get": {
        "description": "Returns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines.",
        "operationId": "BettingMarket",
        "summary": "Betting Market",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{eventId}/{marketTypeID}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint.",
        "operationId": "BettingMarketsByMarketType",
        "summary": "Betting Markets - by Market Type",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The Market Type ID of the desired MarketTypes to pull. Some common types include: <code>1</code> for Game Lines, <code>2</code> for Player Props, <code>3</code> for Team Props, <code>6</code> for Game Props",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByGameID/{gameID}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given GameID.",
        "operationId": "BettingMarketsByGame",
        "summary": "Betting Markets - by Game",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameID",
            "in": "path",
            "description": "The GameID of the desired game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMetadata": {
      "get": {
        "description": "Returns the list of MarketTypes, BetTypes, PeriodTypes, OutcomeTypes, and ResultTypes to map the IDs to descriptive names. Also includes a list of the MarketType, BetType & PeriodType combinations which we will have resulting for.",
        "operationId": "BettingMetadata",
        "summary": "Betting Metadata",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingEntityMetadataCollection"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/ActiveSportsbooks": {
      "get": {
        "description": "A list of all available sportsbooks with their associated unique IDs.",
        "operationId": "SportsbooksByActive",
        "summary": "Sportsbooks - by Active",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sportsbook"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketResults/{marketId}": {
      "get": {
        "description": "Returns all outcomes under this market which have a result type associated. Will return empty list if resulting has not yet processed for the given game. Resulting processes shortly after game closing.",
        "operationId": "BettingResultsByMarket",
        "summary": "Betting Results - by Market",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets. Valid IDs include <code>837872</code>, <code>841068</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarketResult"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingSplitsByMarketId/{marketId}": {
      "get": {
        "description": "List of Money and Bet Percentage splits for each outcome type available in this market. This specific endpoint will return the movement from this market as well as the most recent.",
        "operationId": "BettingSplitsByBettingMarket",
        "summary": "Betting Splits by - Betting Market",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull splits.. Valid IDs include <code>837872</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarketSplit"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingSplitsByGameId/{gameId}": {
      "get": {
        "description": "List of Money and Bet Percentage splits for each market and their respective outcome types available in this game. This specific endpoint will return current splits for each available market and no line movement.",
        "operationId": "BettingSplitsByGame",
        "summary": "Betting Splits - by Game",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The ID of the game for which you want to receive splits for. Example <code>63266</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/GameBettingSplit"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingPlayerPropsByGameID/{gameId}": {
      "get": {
        "description": "This works in the same way as Betting Markets by Market Type but is prefiltered to the Player Props type only. Ideal if your application will only ever require Player Props, but if you also want Team Props etc. it is recommended to use the by Market Type endpoint.",
        "operationId": "BettingPlayerPropsByGame",
        "summary": "Betting Player Props - by Game",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The unique GameID of the game in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/pushauthinplaylines": {
      "get": {
        "description": "This is a beta endpoint. Token issue for mlb:odds:in-play-lines",
        "operationId": "PushAuthenticationInPlayLines",
        "summary": "Push Authentication (In Play Lines)",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "null",
              "x-nullable": false
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/pushauthpregamelines": {
      "get": {
        "description": "This is a beta endpoint. Token issue for mlb:odds:pre-game-lines",
        "operationId": "PushAuthenticationPreGameLines",
        "summary": "Push Authentication (Pre Game Lines)",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "null",
              "x-nullable": false
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByEvent/{eventId}/{sportsbookGroup}": {
      "get": {
        "description": "Returns the markets and available outcomes for a given BettingEventID. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByEvent[SportsbookGroup]",
        "summary": "Betting Markets - by Event [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByGameID/{gameID}/{sportsbookGroup}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given GameID. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByGame[SportsbookGroup]",
        "summary": "Betting Markets - by Game [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameID",
            "in": "path",
            "description": "The GameID of the desired game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{marketId}/{sportsbookGroup}": {
      "get": {
        "description": "Returns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarket[SportsbookGroup]",
        "summary": "Betting Market - [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br>\n\n<b>Important Note:</b> the default parameter of available is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>\n\nPossible values include: <br><br>\n<code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br>\n<code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingFuturesBySeason/{season}/{sportsbookGroup}": {
      "get": {
        "description": "Returns available Futures markets for the given season. Does not include line movement. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingFuturesBySeason[SportsbookGroup]",
        "summary": "Betting Futures - by Season [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season (with optional season type).<br>Examples: <code>2020</code>, <code>2020PRE</code>, <code>2020POST</code>, <code>2020STAR</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{eventID}/{marketTypeID}/{sportsbookGroup}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByMarketType[SportsbookGroup]",
        "summary": "Betting Markets - by Market Type [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "eventID",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The Market Type ID of the desired MarketTypes to pull. Some common types include: <code>1</code> for Game Lines, <code>2</code> for Player Props, <code>3</code> for Team Props, <code>6</code> for Game Props",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingPlayerPropsByGameID/{gameId}/{sportsbookGroup}": {
      "get": {
        "description": "This works in the same way as Betting Markets by Market Type but is prefiltered to the Player Props type only. Ideal if your application will only ever require Player Props, but if you also want Team Props etc. it is recommended to use the by Market Type endpoint. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingPlayerPropsByGame[SportsbookGroup]",
        "summary": "Betting Player Props - by Game [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The unique GameID of the game in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "This parameter indicates which <code>BettingOutcome</code> records to return in the payload. By default, this endpoint only returns available outcomes, excluding the unlisted bets. <br><br><b>Important Note:</b> the default parameter of <code>available</code> is much faster and provides the best performance. Passing unlisted will return unlisted odds, but these are cached for much longer and may be several minutes old. For best performance, the default parameter is highly recommended. <br><br>Possible values include: <br><br><code>available</code> - excludes any betting outcomes that have been removed/unlisted by the respective sportsbook. This is more lightweight and delivers odds much faster than using unlisted. <br><br><code>unlisted</code> - includes the most recently available betting outcome per sportsbook, for each listed market, even those outcomes are expired/unlisted or otherwise unavailable from the respective sportsbook. This is a far heavier payload, and it's cached for much longer than available. <br><br>",
            "type": "string",
            "default": "available",
            "enum": [
              "available",
              "unlisted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingResultsByMarket/{marketID}/{sportsbookGroup}": {
      "get": {
        "description": "Provide a market ID that supports resulting (i.e. has a ResultType) and this endpoint will return a result: for markets with a ResultType, each line will be graded and it will be determined whether the bet would have won or lost. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingResultsByMarket[SportsbookGroup]",
        "summary": "Betting Results - by Market [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "marketID",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets. Valid IDs include <code>837872</code>, <code>841068</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarketResult"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsByDate/{date}/{sportsbookGroup}": {
      "get": {
        "description": "Returns the full-game and non-full-game odds (spread, moneyline, total) for games on a given date. Only returns the most recently seen odds, not inclusive of line movement. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsByDate[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds - by Date [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsLineMovement/{gameid}/{sportsbookGroup}": {
      "get": {
        "description": "Returns the game odds ( for games in a given week and season. In this endpoint both full-game and partial-game odds are included. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsLineMovement[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsByDate/{date}/{sportsbookGroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games on a given date. Only returns the most recently seen odds, not inclusive of line movement. As this is in-game, it will only return results while the game is in progress. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsByDate[SportsbookGroup]",
        "summary": "In-Game Odds - by Date [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsLineMovement/{gameid}/{sportsbookGroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games in a given week and season. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsLineMovement[SportsbookGroup]",
        "summary": "In-Game Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsLineMovementWithResulting/{gameid}/{sportsbookGroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games in a given week and season. This also includes Resulting: for markets with a ResultType, each line will be graded and it will be determined whether the bet would have won or lost. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsLineMovementWithResulting[SportsbookGroup]",
        "summary": "In-Game Odds Line Movement with Resulting [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfoResult"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsLineMovementWithResulting/{gameid}/{sportsbookGroup}": {
      "get": {
        "description": "Returns the game odds ( for games in a given week and season. In this endpoint both full-game and partial-game odds are included. This also includes Resulting: for markets with a ResultType, each line will be graded and it will be determined whether the bet would have won or lost. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsLineMovementWithResulting[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of an MLB game.  GameIDs can be found in the Games API.  Valid entries are <code>51735</code> or <code>51745</code>",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookGroup",
            "in": "path",
            "description": "The name of the sportsbook group that will filter outcomes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfoResult"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "GameInfo": {
      "properties": {
        "GameId": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Status": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "GlobalGameId": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalAwayTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "PregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        },
        "LiveOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "AlternateMarketPregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        }
      }
    },
    "GameOdd": {
      "properties": {
        "GameOddId": {
          "type": "integer",
          "x-nullable": false
        },
        "Sportsbook": {
          "type": "string",
          "x-nullable": true
        },
        "GameId": {
          "type": "integer",
          "x-nullable": false
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "HomeMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "HomePointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "AwayPointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "HomePointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayPointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": true
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookId": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "PlayerProp": {
      "properties": {
        "PlayerID": {
          "type": "integer",
          "x-nullable": false
        },
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Opponent": {
          "type": "string",
          "x-nullable": true
        },
        "Team": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Description": {
          "type": "string",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": false
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": false
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": false
        },
        "BetResult": {
          "type": "string",
          "x-nullable": true
        },
        "StatResult": {
          "type": "number",
          "x-nullable": true
        }
      }
    },
    "TeamTrends": {
      "properties": {
        "Team": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "UpcomingGame": {
          "$ref": "#/definitions/Game"
        },
        "TeamGameTrends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamGameTrends"
          }
        }
      }
    },
    "Game": {
      "properties": {
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Status": {
          "type": "string",
          "x-nullable": true
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeam": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeam": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamID": {
          "type": "integer",
          "x-nullable": false
        },
        "HomeTeamID": {
          "type": "integer",
          "x-nullable": false
        },
        "RescheduledGameID": {
          "type": "integer",
          "x-nullable": true
        },
        "StadiumID": {
          "type": "integer",
          "x-nullable": true
        },
        "Channel": {
          "type": "string",
          "x-nullable": true
        },
        "Inning": {
          "type": "integer",
          "x-nullable": true
        },
        "InningHalf": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamRuns": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamRuns": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamHits": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamHits": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamErrors": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamErrors": {
          "type": "integer",
          "x-nullable": true
        },
        "WinningPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "LosingPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "SavingPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "Attendance": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamProbablePitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamProbablePitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "Outs": {
          "type": "integer",
          "x-nullable": true
        },
        "Balls": {
          "type": "integer",
          "x-nullable": true
        },
        "Strikes": {
          "type": "integer",
          "x-nullable": true
        },
        "CurrentPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "CurrentHitterID": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamStartingPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamStartingPitcherID": {
          "type": "integer",
          "x-nullable": true
        },
        "CurrentPitchingTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "CurrentHittingTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": true
        },
        "AwayTeamMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "ForecastTempLow": {
          "type": "integer",
          "x-nullable": true
        },
        "ForecastTempHigh": {
          "type": "integer",
          "x-nullable": true
        },
        "ForecastDescription": {
          "type": "string",
          "x-nullable": true
        },
        "ForecastWindChill": {
          "type": "integer",
          "x-nullable": true
        },
        "ForecastWindSpeed": {
          "type": "integer",
          "x-nullable": true
        },
        "ForecastWindDirection": {
          "type": "integer",
          "x-nullable": true
        },
        "RescheduledFromGameID": {
          "type": "integer",
          "x-nullable": true
        },
        "RunnerOnFirst": {
          "type": "boolean",
          "x-nullable": true
        },
        "RunnerOnSecond": {
          "type": "boolean",
          "x-nullable": true
        },
        "RunnerOnThird": {
          "type": "boolean",
          "x-nullable": true
        },
        "AwayTeamStartingPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamStartingPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "CurrentPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "CurrentHitter": {
          "type": "string",
          "x-nullable": true
        },
        "WinningPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "LosingPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "SavingPitcher": {
          "type": "string",
          "x-nullable": true
        },
        "DueUpHitterID1": {
          "type": "integer",
          "x-nullable": true
        },
        "DueUpHitterID2": {
          "type": "integer",
          "x-nullable": true
        },
        "DueUpHitterID3": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalGameID": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalAwayTeamID": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalHomeTeamID": {
          "type": "integer",
          "x-nullable": false
        },
        "PointSpreadAwayTeamMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "PointSpreadHomeTeamMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "LastPlay": {
          "type": "string",
          "x-nullable": true
        },
        "IsClosed": {
          "type": "boolean",
          "x-nullable": false
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Innings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Inning"
          }
        },
        "GameEndDateTime": {
          "type": "string",
          "x-nullable": true
        },
        "HomeRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "NeutralVenue": {
          "type": "boolean",
          "x-nullable": true
        },
        "InningDescription": {
          "type": "string",
          "x-nullable": true
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "SeriesInfo": {
          "$ref": "#/definitions/Series"
        },
        "DateTimeUTC": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamOpener": {
          "type": "boolean",
          "x-nullable": true
        },
        "AwayTeamOpener": {
          "type": "boolean",
          "x-nullable": true
        },
        "SuspensionResumeDay": {
          "type": "string",
          "x-nullable": true
        },
        "SuspensionResumeDateTime": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Inning": {
      "properties": {
        "InningID": {
          "type": "integer",
          "x-nullable": false
        },
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "InningNumber": {
          "type": "integer",
          "x-nullable": false
        },
        "AwayTeamRuns": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamRuns": {
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Series": {
      "properties": {
        "HomeTeamWins": {
          "type": "integer",
          "x-nullable": false
        },
        "AwayTeamWins": {
          "type": "integer",
          "x-nullable": false
        },
        "GameNumber": {
          "type": "integer",
          "x-nullable": false
        },
        "MaxLength": {
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "TeamGameTrends": {
      "properties": {
        "Scope": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": false
        },
        "Team": {
          "type": "string",
          "x-nullable": true
        },
        "OpponentID": {
          "type": "integer",
          "x-nullable": true
        },
        "Opponent": {
          "type": "string",
          "x-nullable": true
        },
        "Wins": {
          "type": "integer",
          "x-nullable": false
        },
        "Losses": {
          "type": "integer",
          "x-nullable": false
        },
        "Ties": {
          "type": "integer",
          "x-nullable": false
        },
        "WinsAgainstTheSpread": {
          "type": "integer",
          "x-nullable": true
        },
        "LossesAgainstTheSpread": {
          "type": "integer",
          "x-nullable": true
        },
        "PushesAgainstTheSpread": {
          "type": "integer",
          "x-nullable": true
        },
        "Overs": {
          "type": "integer",
          "x-nullable": true
        },
        "Unders": {
          "type": "integer",
          "x-nullable": true
        },
        "OverUnderPushes": {
          "type": "integer",
          "x-nullable": true
        },
        "AverageScore": {
          "type": "number",
          "x-nullable": true
        },
        "AverageOpponentScore": {
          "type": "number",
          "x-nullable": true
        }
      }
    },
    "MatchupTrends": {
      "properties": {
        "UpcomingGame": {
          "$ref": "#/definitions/Game"
        },
        "TeamTrends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamTrends"
          }
        },
        "TeamMatchupTrends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamGameTrends"
          }
        },
        "OpponentMatchupTrends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamGameTrends"
          }
        },
        "PreviousGames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Game"
          }
        }
      }
    },
    "BettingEvent": {
      "properties": {
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Season": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingEventTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventType": {
          "type": "string",
          "x-nullable": true
        },
        "StartDate": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "GameID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalGameID": {
          "type": "integer",
          "x-nullable": true
        },
        "GameStatus": {
          "type": "string",
          "x-nullable": true
        },
        "Quarter": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeam": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeam": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalAwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarkets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingMarket"
          }
        },
        "GameStartTime": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingMarket": {
      "properties": {
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingBetTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingBetType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingPeriodTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingPeriodType": {
          "type": "string",
          "x-nullable": true
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "TeamKey": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerName": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "AvailableSportsbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sportsbook"
          }
        },
        "AnyBetsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "BettingOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingOutcome"
          }
        },
        "ConsensusOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsensusOutcome"
          }
        },
        "IsArchived": {
          "type": "boolean",
          "x-nullable": false
        },
        "ArchiveLocation": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Sportsbook": {
      "properties": {
        "SportsbookID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingOutcome": {
      "properties": {
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "IsInPlay": {
          "type": "boolean",
          "x-nullable": true
        },
        "SportsbookMarketID": {
          "type": "string",
          "x-nullable": true
        },
        "SportsbookOutcomeID": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ConsensusOutcome": {
      "properties": {
        "NumberOfSportsbooks": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "IsInPlay": {
          "type": "boolean",
          "x-nullable": true
        },
        "SportsbookMarketID": {
          "type": "string",
          "x-nullable": true
        },
        "SportsbookOutcomeID": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingEntityMetadataCollection": {
      "properties": {
        "BettingBetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingMarketTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingPeriodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingEventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingOutcomeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "ResultedMarketMetaData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingResultingMetadata"
          }
        },
        "BettingResultTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        }
      }
    },
    "BettingEntityMetadata": {
      "properties": {
        "RecordId": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Active": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "BettingResultingMetadata": {
      "properties": {
        "BettingMarketTypeId": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingBetTypeId": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingPeriodTypeId": {
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "BettingMarketResult": {
      "properties": {
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingBetTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingBetType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingPeriodTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingPeriodType": {
          "type": "string",
          "x-nullable": true
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "TeamKey": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerName": {
          "type": "string",
          "x-nullable": true
        },
        "BettingOutcomeResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingOutcomeResult"
          }
        },
        "IsMarketResultingSupported": {
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "BettingOutcomeResult": {
      "properties": {
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingResultTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingResultType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "BetValue": {
          "type": "number",
          "x-nullable": true
        },
        "ActualValue": {
          "type": "number",
          "x-nullable": true
        }
      }
    },
    "BettingMarketSplit": {
      "properties": {
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingBetTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingBetType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingPeriodTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingPeriodType": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "TeamKey": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerName": {
          "type": "string",
          "x-nullable": true
        },
        "BettingSplits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingSplit"
          }
        }
      }
    },
    "BettingSplit": {
      "properties": {
        "BettingMarketSplitID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "BetPercentage": {
          "type": "integer",
          "x-nullable": true
        },
        "MoneyPercentage": {
          "type": "integer",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "LastSeen": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "GameBettingSplit": {
      "properties": {
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeam": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeam": {
          "type": "string",
          "x-nullable": true
        },
        "BettingMarketSplits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingMarketSplit"
          }
        }
      }
    },
    "GameInfoResult": {
      "properties": {
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Status": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "GlobalGameID": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalAwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "AlternateMarketPregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        },
        "Inning": {
          "type": "integer",
          "x-nullable": true
        },
        "InningHalf": {
          "type": "string",
          "x-nullable": true
        },
        "IsClosed": {
          "type": "boolean",
          "x-nullable": false
        },
        "Innings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Inning"
          }
        },
        "LiveOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        }
      }
    },
    "GameOddResult": {
      "properties": {
        "GameOddID": {
          "type": "integer",
          "x-nullable": false
        },
        "Sportsbook": {
          "type": "string",
          "x-nullable": true
        },
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "HomeMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "HomePointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "AwayPointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "HomePointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayPointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": true
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "GameOddOutcomeResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddOutcome"
          }
        }
      }
    },
    "GameOddOutcome": {
      "properties": {
        "GameOddId": {
          "type": "integer",
          "x-nullable": true
        },
        "GameOddResultTypeId": {
          "type": "integer",
          "x-nullable": true
        },
        "GameOddResultType": {
          "type": "string",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "GameOddType": {
          "type": "string",
          "x-nullable": true
        },
        "BetValue": {
          "type": "number",
          "x-nullable": true
        },
        "ActualValue": {
          "type": "number",
          "x-nullable": true
        }
      }
    }
  },
  "tags": []
}