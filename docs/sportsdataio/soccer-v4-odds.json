{
  "swagger": "2.0",
  "info": {
    "title": "Soccer v4 Odds",
    "version": "1.0"
  },
  "host": "api.sportsdata.io",
  "basePath": "/v4/soccer/odds",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/{format}/GameOddsLineMovement/{competition}/{gameid}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games on a given date. Non-full-game means 1st-half or 1st-quarter, for example, rather than full game. Returns the full line movement for the given game within a competition. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "PreGameOddsLineMovement",
        "summary": "Pre-Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/LiveGameOddsLineMovement/{competition}/{gameid}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for a given game in a given competition. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "InGameOddsLineMovement",
        "summary": "In-Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/GameOddsByDate/{competition}/{date}": {
      "get": {
        "description": "Returns full game odds (spread, moneyline, total) for games from a given competition on a given date. Only returns the most recently seen odds, not inclusive of line movement.",
        "operationId": "PreGameOddsByDate",
        "summary": "Pre-Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). \n<br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/ActiveSportsbooks": {
      "get": {
        "description": "A list of all available sportsbooks with their associated unique IDs.",
        "operationId": "SportsbooksByActive",
        "summary": "Sportsbooks - by Active",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sportsbook"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEventsBySeason/{competition}/{season}": {
      "get": {
        "description": "The list of current BettingEvents for the given season within a given competition, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsBySeason",
        "summary": "Betting Events - by Season",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season<br>Examples: <code>2020</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingFuturesBySeason/{competition}/{season}": {
      "get": {
        "description": "Returns available Futures markets for the given season and a given competition. Does not include line movement.",
        "operationId": "BettingFuturesBySeason",
        "summary": "Betting Futures - by Season",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season<br>Examples: <code>2020</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{competition}/{marketId}": {
      "get": {
        "description": "Returns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines.",
        "operationId": "BettingMarket",
        "summary": "Betting Market",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarkets/{competition}/{eventId}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given BettingEventID within a given competition.",
        "operationId": "BettingMarketsByEvent",
        "summary": "Betting Markets - by Event",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).\n",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByGameID/{competition}/{gameid}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given GameID within a given competition.",
        "operationId": "BettingMarketsByGame",
        "summary": "Betting Markets - by Game",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of the desired game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{competition}/{eventId}/{marketTypeID}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event (within a competition) and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint.",
        "operationId": "BettingMarketsByMarketType",
        "summary": "Betting Markets - by Market Type",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The Market Type ID of the desired MarketTypes to pull. Some common types include: <code>1</code> for Game Lines, <code>2</code> for Player Props, <code>3</code> for Team Props, <code>6</code> for Game Props",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMetadata": {
      "get": {
        "description": "Returns the list of MarketTypes, BetTypes, PeriodTypes, OutcomeTypes, and ResultTypes to map the IDs to descriptive names. Also includes a list of the MarketType, BetType & PeriodType combinations which we will have resulting for.",
        "operationId": "BettingMetadata",
        "summary": "Betting Metadata",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingEntityMetadataCollection"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingEventsByDate/{competition}/{date}": {
      "get": {
        "description": "The list of current BettingEvents for the given date and competition, from which Betting Market data can be gathered via the Betting Markets by Event endpoint, for all available Betting Market types (e.g. Player Props, Team Props.)",
        "operationId": "BettingEventsByDate",
        "summary": "Betting Events - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-11-20</code>, <code>2018-11-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingPlayerPropsByGameID/{competition}/{gameId}": {
      "get": {
        "description": "This works in the same way as Betting Markets by Market Type but is prefiltered to the Player Props type only. Ideal if your application will only ever require Player Props, but if you also want Team Props etc. it is recommended to use the by Market Type endpoint.",
        "operationId": "BettingPlayerPropsByGame",
        "summary": "Betting Player Props - by Game",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The unique GameID of the game in question.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/AlternateMarketGameOddsLineMovement/{competition}/{gameid}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games on a given date. Non-full-game means 1st-half or 1st-quarter, for example, rather than full game. Returns the full line movement for the given game within a competition. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line.",
        "operationId": "PeriodGameOddsLineMovement",
        "summary": "Period Game Odds Line Movement",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>41323</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/LiveGameOddsByDate/{competition}/{date}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games on a given date in a given competition. Only returns the most recently seen odds, not inclusive of line movement. As this is in-game, it will only return results while the game is in progress.",
        "operationId": "InGameOddsByDate",
        "summary": "In-Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/AlternateMarketGameOddsByDate/{competition}/{date}": {
      "get": {
        "description": "Returns the non-full-game odds (spread, moneyline, total) for games on a given date in a given competition. Non-full-game means 1st-half or 1st-quarter, for example, rather than full game. Only returns the most recently seen odds, not inclusive of line movement.",
        "operationId": "PeriodGameOddsByDate",
        "summary": "Period Game Odds - by Date",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). \n<br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsByDate/{competition}/{date}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the full-game and non-full-game odds (spread, moneyline, total) for games on a given date for a given competition. Only returns the most recently seen odds, not inclusive of line movement. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsByDate[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds - by Date [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). \n<br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsByDate/{competition}/{date}/{sportsbookgroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for games on a given date and competition. Only returns the most recently seen odds, not inclusive of line movement. As this is in-game, it will only return results while the game is in progress. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsByDate[SportsbookGroup]",
        "summary": "In-Game Odds - by Date [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the game(s). <br>Examples: <code>2018-06-20</code>, <code>2018-06-23</code>.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsLineMovement/{competition}/{gameid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the game odds for a given game in a given competition. In this endpoint both full-game and partial-game odds are included. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsLineMovement[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsLineMovement/{competition}/{gameid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for a given game and competition. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsLineMovement[SportsbookGroup]",
        "summary": "In-Game Odds Line Movement [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfo"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/PreGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the game odds for a given game and competition. In this endpoint both full-game and partial-game odds are included. This also includes Resulting: for markets with a ResultType, each line will be graded and it will be determined whether the bet would have won or lost. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "PreGameAndPeriodGameOddsLineMovementWithResulting[SportsbookGroup]",
        "summary": "Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfoResult"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/InGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns in-play game odds (spread, moneyline, total) for a given game in a competition. This also includes Resulting: for markets with a ResultType, each line will be graded and it will be determined whether the bet would have won or lost. Returns the full line movement for the given game. This endpoint has a longer cache as it is meant for historical data/line movement rather than the most up to the second line. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "InGameOddsLineMovementWithResulting[SportsbookGroup]",
        "summary": "In-Game Odds Line Movement with Resulting [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "default": "XML",
            "enum": [
              "XML",
              "JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of a Soccer game.  GameIDs can be found in the Games API.  Valid entries are <code>14060</code>, <code>14061</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameInfoResult"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingFuturesBySeason/{competition}/{season}/{sportsbookgroup}": {
      "get": {
        "description": "Returns available Futures markets for the given season. Does not include line movement. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingFuturesBySeason[SportsbookGroup]",
        "summary": "Betting Futures - by Season [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "Year of the season<br>Examples: <code>2020</code>, <code>2021</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingEvent"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarket/{competition}/{marketId}/{sportsbookgroup}": {
      "get": {
        "description": "Returns full line movement for a given BettingMarket. Due to the sheer size of the output and the level of detail, it is intended for historical data purposes and not for the most up-to-the-second lines. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarket[SportsbookGroup]",
        "summary": "Betting Market [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketId",
            "in": "path",
            "description": "The MarketId of the desired market for which to pull all outcomes/bets.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "$ref": "#/definitions/BettingMarket"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByEvent/{competition}/{eventId}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the markets and available outcomes for a given BettingEventID. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByEvent[SportsbookGroup]",
        "summary": "Betting Markets - by Event [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByGameID/{competition}/{gameid}/{sportsbookgroup}": {
      "get": {
        "description": "Returns the markets of all available types (e.g. Player Props, Team Props) and available outcomes for a given GameID in a competition. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByGame[SportsbookGroup]",
        "summary": "Betting Markets - by Game [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameid",
            "in": "path",
            "description": "The GameID of the desired game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingMarketsByMarketType/{competition}/{eventId}/{marketTypeID}/{sportsbookgroup}": {
      "get": {
        "description": "Returns Markets and available outcomes for a given event and market type requested. A lighter call than by BettingEventID as it only includes markets tagged with the specific MarketType, a full list of which is available for each sport in its Betting Metadata endpoint. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingMarketsByMarketType[SportsbookGroup]",
        "summary": "Betting Markets - by Market Type [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The EventId of the desired event/game for which to pull all betting markets (includes outcomes/bets).",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketTypeID",
            "in": "path",
            "description": "The Market Type ID of the desired MarketTypes to pull. Some common types include: <code>1</code> for Game Lines, <code>2</code> for Player Props, <code>3</code> for Team Props, <code>6</code> for Game Props",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/{format}/BettingPlayerPropsByGameID/{competition}/{gameId}/{sportsbookgroup}": {
      "get": {
        "description": "This works in the same way as Betting Markets by Market Type but is prefiltered to the Player Props type only. Ideal if your application will only ever require Player Props, but if you also want Team Props etc. it is recommended to use the by Market Type endpoint. A Sportsbook Group must be specified as a URL parameter.",
        "operationId": "BettingPlayerPropsByGame[SportsbookGroup]",
        "summary": "Betting Player Props - by Game [Sportsbook Group]",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.",
            "required": true,
            "type": "string",
            "enum": [
              "XML, JSON"
            ]
          },
          {
            "name": "competition",
            "in": "path",
            "description": "An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "The unique GameID of the game in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sportsbookgroup",
            "in": "path",
            "description": "The name of the Sportsbook grouping.\n<br>Examples: <code>G1100</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BettingMarket"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "GameInfo": {
      "properties": {
        "GameId": {
          "type": "integer",
          "x-nullable": false
        },
        "RoundId": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Week": {
          "type": "integer",
          "x-nullable": true
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Status": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "GlobalGameId": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalAwayTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamId": {
          "type": "integer",
          "x-nullable": true
        },
        "PregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        },
        "LiveOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AlternateMarketPregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOdd"
          }
        }
      }
    },
    "GameOdd": {
      "properties": {
        "GameOddId": {
          "type": "integer",
          "x-nullable": false
        },
        "Sportsbook": {
          "type": "string",
          "x-nullable": true
        },
        "GameId": {
          "type": "integer",
          "x-nullable": false
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "HomeMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "DrawMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "HomePointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "AwayPointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "HomePointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayPointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": true
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookId": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamAsianHandicap": {
          "type": "number",
          "x-nullable": true
        },
        "AwayTeamAsianHandicap": {
          "type": "number",
          "x-nullable": true
        },
        "HomeTeamAsianHandicapPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamAsianHandicapPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AsianTotal": {
          "type": "number",
          "x-nullable": true
        },
        "AsianTotalOverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AsianTotalUnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Sportsbook": {
      "properties": {
        "SportsbookID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BettingEvent": {
      "properties": {
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Season": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingEventTypeID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventType": {
          "type": "string",
          "x-nullable": true
        },
        "StartDate": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "GameID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalGameID": {
          "type": "integer",
          "x-nullable": true
        },
        "GameStatus": {
          "type": "string",
          "x-nullable": true
        },
        "Quarter": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeam": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeam": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalAwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeRotationNumber": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarkets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingMarket"
          }
        },
        "CompetitionId": {
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "BettingMarket": {
      "properties": {
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingEventID": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingMarketTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingBetTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingBetType": {
          "type": "string",
          "x-nullable": true
        },
        "BettingPeriodTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingPeriodType": {
          "type": "string",
          "x-nullable": true
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "TeamKey": {
          "type": "string",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerName": {
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "AvailableSportsbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sportsbook"
          }
        },
        "AnyBetsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "BettingOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingOutcome"
          }
        },
        "ConsensusOutcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsensusOutcome"
          }
        }
      }
    },
    "BettingOutcome": {
      "properties": {
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "IsInPlay": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "ConsensusOutcome": {
      "properties": {
        "NumberOfSportsbooks": {
          "type": "integer",
          "x-nullable": false
        },
        "BettingOutcomeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingMarketID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsBook": {
          "$ref": "#/definitions/Sportsbook"
        },
        "BettingOutcomeTypeID": {
          "type": "integer",
          "x-nullable": true
        },
        "BettingOutcomeType": {
          "type": "string",
          "x-nullable": true
        },
        "PayoutAmerican": {
          "type": "integer",
          "x-nullable": true
        },
        "PayoutDecimal": {
          "type": "number",
          "x-nullable": true
        },
        "Value": {
          "type": "number",
          "x-nullable": true
        },
        "Participant": {
          "type": "string",
          "x-nullable": true
        },
        "IsAvailable": {
          "type": "boolean",
          "x-nullable": true
        },
        "IsAlternate": {
          "type": "boolean",
          "x-nullable": true
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "Unlisted": {
          "type": "string",
          "x-nullable": true
        },
        "TeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PlayerID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "IsInPlay": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "BettingEntityMetadataCollection": {
      "properties": {
        "BettingBetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingMarketTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingPeriodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingEventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        },
        "BettingOutcomeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BettingEntityMetadata"
          }
        }
      }
    },
    "BettingEntityMetadata": {
      "properties": {
        "RecordId": {
          "type": "integer",
          "x-nullable": false
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "Active": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "GameInfoResult": {
      "properties": {
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Season": {
          "type": "integer",
          "x-nullable": false
        },
        "SeasonType": {
          "type": "integer",
          "x-nullable": false
        },
        "Day": {
          "type": "string",
          "x-nullable": true
        },
        "DateTime": {
          "type": "string",
          "x-nullable": true
        },
        "Status": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "HomeTeamName": {
          "type": "string",
          "x-nullable": true
        },
        "GlobalGameID": {
          "type": "integer",
          "x-nullable": false
        },
        "GlobalAwayTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "GlobalHomeTeamID": {
          "type": "integer",
          "x-nullable": true
        },
        "PregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        },
        "HomeTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScore": {
          "type": "integer",
          "x-nullable": true
        },
        "TotalScore": {
          "type": "integer",
          "x-nullable": true
        },
        "RoundID": {
          "type": "integer",
          "x-nullable": false
        },
        "Week": {
          "type": "integer",
          "x-nullable": true
        },
        "AlternateMarketPregameOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        },
        "Period": {
          "type": "string",
          "x-nullable": true
        },
        "Clock": {
          "type": "integer",
          "x-nullable": true
        },
        "Winner": {
          "type": "string",
          "x-nullable": true
        },
        "AwayTeamScorePeriod1": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScorePeriod2": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScoreExtraTime": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayTeamScorePenalty": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScorePeriod1": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScorePeriod2": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScoreExtraTime": {
          "type": "integer",
          "x-nullable": true
        },
        "HomeTeamScorePenalty": {
          "type": "integer",
          "x-nullable": true
        },
        "ClockExtra": {
          "type": "integer",
          "x-nullable": true
        },
        "ClockDisplay": {
          "type": "string",
          "x-nullable": true
        },
        "IsClosed": {
          "type": "boolean",
          "x-nullable": true
        },
        "LiveOdds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddResult"
          }
        }
      }
    },
    "GameOddResult": {
      "properties": {
        "GameOddID": {
          "type": "integer",
          "x-nullable": false
        },
        "Sportsbook": {
          "type": "string",
          "x-nullable": true
        },
        "GameID": {
          "type": "integer",
          "x-nullable": false
        },
        "Created": {
          "type": "string",
          "x-nullable": true
        },
        "Updated": {
          "type": "string",
          "x-nullable": true
        },
        "HomeMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayMoneyLine": {
          "type": "integer",
          "x-nullable": true
        },
        "HomePointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "AwayPointSpread": {
          "type": "number",
          "x-nullable": true
        },
        "HomePointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "AwayPointSpreadPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "OverUnder": {
          "type": "number",
          "x-nullable": true
        },
        "OverPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "UnderPayout": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookID": {
          "type": "integer",
          "x-nullable": true
        },
        "SportsbookUrl": {
          "type": "string",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "GameOddOutcomeResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameOddOutcome"
          }
        }
      }
    },
    "GameOddOutcome": {
      "properties": {
        "GameOddId": {
          "type": "integer",
          "x-nullable": false
        },
        "GameOddResultTypeId": {
          "type": "integer",
          "x-nullable": true
        },
        "GameOddResultType": {
          "type": "string",
          "x-nullable": true
        },
        "OddType": {
          "type": "string",
          "x-nullable": true
        },
        "GameOddType": {
          "type": "string",
          "x-nullable": true
        },
        "BetValue": {
          "type": "number",
          "x-nullable": true
        },
        "ActualValue": {
          "type": "number",
          "x-nullable": true
        }
      }
    }
  },
  "tags": []
}