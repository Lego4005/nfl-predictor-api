# Pre-commit hooks configuration for NFL Predictor API
# See https://pre-commit.com for more information

repos:
  # Python Code Formatting
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python Import Sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Python Type Checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        additional_dependencies:
          - types-requests
          - types-redis
          - types-python-dateutil

  # Python Security Scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, reports/bandit-report.json]
        pass_filenames: false

  # General Code Quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # General file checks
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-docstring-first
      - id: debug-statements
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python Specific Checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-ast
      - id: check-builtin-literals
      - id: name-tests-test
        args: [--pytest-test-first]
        files: tests/.+\.py$
      - id: requirements-txt-fixer

  # Secrets Detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
              \.secrets\.baseline|
              tests/fixtures/.*\.json|
              package-lock\.json
          )$

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          - --convention=google
          - --add-ignore=D100,D104,D105,D107
        files: ^src/

  # SQL Linting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.2
    hooks:
      - id: sqlfluff-lint
        args: [--dialect=postgres]
        files: \.sql$
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']

  # Frontend (JavaScript/TypeScript)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|css|md|json)$
        exclude: |
          (?x)^(
              package-lock\.json|
              node_modules/.*|
              dist/.*|
              coverage/.*
          )$

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Shell Scripts
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
      - id: shellcheck

  # Configuration Files
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-d, relaxed]

  # Custom Hooks
  - repo: local
    hooks:
      # Test Coverage Check
      - id: test-coverage
        name: Check Test Coverage
        entry: python scripts/check_coverage.py
        language: system
        pass_filenames: false
        stages: [commit]

      # Model File Size Check
      - id: model-size-check
        name: Check ML Model File Sizes
        entry: python scripts/check_model_sizes.py
        language: system
        files: \.pkl$|\.joblib$|\.h5$|\.pb$
        pass_filenames: true

      # API Schema Validation
      - id: api-schema-validation
        name: Validate API Schema
        entry: python scripts/validate_api_schema.py
        language: system
        files: ^src/.*\.py$
        pass_filenames: false

      # Database Migration Check
      - id: migration-check
        name: Check Database Migrations
        entry: python scripts/check_migrations.py
        language: system
        files: ^alembic/versions/.*\.py$
        pass_filenames: true

      # Environment Variables Check
      - id: env-vars-check
        name: Check Environment Variables
        entry: python scripts/check_env_vars.py
        language: system
        files: ^\.env\..*$|^src/config/.*\.py$
        pass_filenames: false

      # Performance Baseline Check
      - id: performance-baseline
        name: Check Performance Baseline
        entry: python scripts/check_performance_baseline.py
        language: system
        pass_filenames: false
        stages: [pre-push]

  # Commit Message Linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.10.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [push]

# Global settings
fail_fast: false
default_stages: [commit]

# CI-specific configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [test-coverage, model-size-check, performance-baseline]
  submodules: false