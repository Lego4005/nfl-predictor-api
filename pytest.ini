[tool:pytest]
# Pytest Configuration for NFL Predictor Platform
# Optimized for comprehensive testing with 90% coverage target

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Minimum version requirements
minversion = 6.0

# Core configuration
addopts =
    -ra
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing:skip-covered
    --cov-fail-under=90
    --cov-branch
    --maxfail=10
    --durations=10
    --doctest-modules
    --doctest-ignore-import-errors

# Test markers for comprehensive 375+ prediction testing
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    asyncio: marks tests as asyncio tests
    performance: marks tests as performance tests
    websocket: marks tests that require WebSocket functionality
    ml: marks tests that require ML models
    betting: marks tests related to betting analytics
    api: marks tests for API endpoints
    frontend: marks tests for frontend components
    security: marks tests related to security
    database: marks tests that require database
    redis: marks tests that require Redis
    external: marks tests that call external APIs
    e2e: marks tests as end-to-end workflow tests
    expert: marks tests for specific expert models
    prediction: marks tests for prediction workflows
    data_pipeline: marks tests for data ingestion pipelines
    load: marks tests for load and stress testing
    regression: marks tests for performance regression
    smoke: marks tests for basic smoke testing

# Async configuration
asyncio_mode = auto

# Filterwarnings to reduce noise
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*:pytest.PytestUnraisableExceptionWarning
    ignore:.*:pytest.PytestCollectionWarning

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# JUnit XML output for CI/CD integration
junit_family = xunit2
junit_suite_name = NFL_Predictor_Test_Suite

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src
branch = true
parallel = true
omit =
    */tests/*
    */test_*
    */conftest.py
    */migrations/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */node_modules/*
    */build/*
    */dist/*
    */__pycache__/*
    */.*

[coverage:paths]
source =
    src
    */site-packages/src

[coverage:report]
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    if sys.version_info
    class.*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = NFL Predictor Platform - Test Coverage Report

[coverage:xml]
output = coverage.xml